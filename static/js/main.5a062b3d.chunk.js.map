{"version":3,"sources":["libs/AppContext.js","containers/Welcome.js","containers/ThingsCard.js","containers/Dashboard.js","libs/Jwt.js","containers/Login.js","containers/NotFound.js","Routes.js","libs/BasicError.js","App.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","Welcome","useState","process","showDemoAlert","setShowDemoAlert","className","Alert","variant","onClose","dismissible","ThingsCard","isRendered","useRef","things","setThings","isAuthenticated","showBasicError","loadThings","filter","a","fetch","method","headers","Headers","Authorization","localStorage","getItem","catch","e","ok","response","current","title","body","status","logout","json","result","toLowerCase","thing","displayName","attributes","name","includes","useEffect","Card","Header","InputGroup","Prepend","Text","FormControl","placeholder","onChange","target","value","Body","length","Accordion","map","key","Toggle","as","eventKey","createdAt","Date","toLocaleString","undefined","Collapse","Table","striped","bordered","hover","size","Object","keys","Dashboard","decodeJwt","token","base64","split","replace","JSON","parse","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","Login","setAuthenticated","isLoading","setIsLoading","password","setPassword","sleep","milliseconds","Promise","resolve","setTimeout","startAt","now","cache","btoa","waitDiff","text","jwt","session","exp","setItem","onSubmit","preventDefault","login","FormGroup","controlId","FormLabel","autoFocus","type","Button","block","disabled","Spinner","animation","NotFound","basename","AuthenticatedRoute","children","to","UnauthenticatedRoute","Routes","exact","path","component","BasicError","props","details","onHide","Modal","show","Title","Footer","onClick","close","App","basicError","location","useLocation","handleLogout","clear","AppContextExports","Navbar","bg","Brand","href","Nav","Link","pathname","Provider","error","console","log","HashRouter","Router","RouterProps","ReactDOM","render","document","getElementById"],"mappings":"saAEaA,EAAaC,wBAAc,MAEjC,SAASC,IACd,OAAOC,qBAAWH,G,kBCDL,SAASI,IAAW,IAAD,EACUC,mBACxCC,2BAAA,UAAqCA,oBAArC,UAF8B,mBACzBC,EADyB,KACVC,EADU,KAKhC,OACE,yBAAKC,UAAU,WACZF,GACC,kBAACG,EAAA,EAAD,CACEC,QAAQ,UACRC,QAAS,kBAAMJ,GAAiB,IAChCK,aAAW,GAHb,wFASF,gDACA,8D,wDCXS,SAASC,IACtB,IAAMC,EAAaC,kBAAO,GADS,EAGPX,mBAAS,IAHF,mBAG5BY,EAH4B,KAGpBC,EAHoB,OAIShB,IAApCiB,EAJ2B,EAI3BA,gBAAiBC,EAJU,EAIVA,eAJU,SAYpBC,EAZoB,8EAYnC,WAA0BC,GAA1B,iBAAAC,EAAA,sEACyBC,MAAM,GAAD,OAAIlB,yBAAJ,cAA+C,CACzEmB,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACnBC,cAAeC,aAAaC,QAAQ,eAErCC,OAAM,SAACC,GACR,MAAO,CAAEC,IAAI,MAPjB,UACQC,EADR,OAUOnB,EAAWoB,QAVlB,oDAYOD,EAASD,GAZhB,uBAaIb,EAAe,CACbgB,MAAO,uBACPC,KAAO,WACL,OAAQH,EAASI,QACf,KAAK,IACL,KAAK,IACH,MAAO,gDACT,KAAK,IACH,MAAO,2BACT,QACE,MAAO,qBARN,GAWPC,OAA4B,MAApBL,EAASI,QAAsC,MAApBJ,EAASI,SA1BlD,2CA+BuBJ,EAASM,OA/BhC,SA+BQC,EA/BR,QAiCaxB,QAAUK,IACnBA,EAASA,EAAOoB,cAChBD,EAAOxB,OAASwB,EAAOxB,OAAOK,QAAO,SAACqB,GACpC,IAAMC,EAAcD,EAAME,YAAcF,EAAME,WAAWC,KACzD,OACGF,GAAeA,EAAYF,cAAcK,SAASzB,IACnDqB,EAAMG,KAAKJ,cAAcK,SAASzB,OAKxCJ,EAAUuB,EAAOxB,QA5CnB,6CAZmC,sBAwGnC,OAlGA+B,qBAAU,WAER,OADA7B,GAAmBE,IACZ,kBAAON,EAAWoB,SAAU,KAElC,CAAChB,IA+FF,kBAAC8B,EAAA,EAAD,CAAMxC,UAAU,cACd,kBAACwC,EAAA,EAAKC,OAAN,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,gBAEF,kBAACC,EAAA,EAAD,CACEC,YAAY,aACZC,SAAU,SAACxB,GAAD,OAAOX,EAAWW,EAAEyB,OAAOC,YAI3C,kBAACT,EAAA,EAAKU,KAAN,KACI1C,GAA4B,IAAlBA,EAAO2C,OAGjB,kBAACC,EAAA,EAAD,CAAWpD,UAAU,+BA7DpBQ,EAAO6C,KAAI,SAACnB,GACjB,OACE,yBAAKoB,IAAG,gBAAWpB,EAAMG,MAAQrC,UAAU,mBACzC,kBAACoD,EAAA,EAAUG,OAAX,CACEC,GAAG,MACHxD,UAAU,eACVyD,SAAUvB,EAAMG,MAEhB,4BAAMH,EAAME,YAAcF,EAAME,WAAWC,MAASH,EAAMG,MACzDH,EAAME,YAAcF,EAAME,WAAWsB,UACpC,uCACY,IAAIC,KAAKzB,EAAME,WAAWsB,WAAWE,uBAE/CC,GAEN,kBAACT,EAAA,EAAUU,SAAX,CAAoBL,SAAUvB,EAAMG,MAClC,yBAAKrC,UAAU,iBACb,kBAAC+D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MACjC,+BACE,4BACE,yCACA,uCAGJ,+BACGC,OAAOC,KAAKnC,EAAME,YAAYiB,KAAI,SAACC,GAClC,OACE,wBAAIA,IAAG,oBAAeA,IACpB,4BACE,2BAAOL,MAAOK,KAEhB,4BAAKpB,EAAME,WAAWkB,iBA4BpC,wBAAItD,UAAU,eAAd,qBC7HK,SAASsE,IAAa,IAAD,EACQ1E,mBACxCC,2BAAA,UAAqCA,oBAArC,UAFgC,mBAC3BC,EAD2B,KACZC,EADY,KAKlC,OACE,yBAAKC,UAAU,aACZF,GACC,kBAACG,EAAA,EAAD,CACEC,QAAQ,UACRC,QAAS,kBAAMJ,GAAiB,IAChCK,aAAW,GAHb,8MAUF,kBAAC,EAAD,O,0CCvBC,SAASmE,EAAUC,GACxB,IAEE,IAAIC,EAASD,EAAME,MAAM,KAAK,GAE9B,OADAD,EAASA,EAAOE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC1CC,KAAKC,MACVC,mBACEC,KAAKN,GACFC,MAAM,IACNrB,KAAI,SAAU2B,GACb,MAAO,KAAO,KAAOA,EAAEC,WAAW,GAAGC,SAAS,KAAKC,OAAO,MAE3DC,KAAK,MAGZ,SACA,OAAO,MCHI,SAASC,IAAS,IAAD,EACYzF,mBACxCC,2BAAA,UAAqCA,oBAArC,UAF4B,mBACvBC,EADuB,KACRC,EADQ,OAIeN,IAArC6F,EAJsB,EAItBA,iBAAkB3E,EAJI,EAIJA,eAJI,EAKIf,oBAAS,GALb,mBAKvB2F,EALuB,KAKZC,EALY,OAME5F,mBAAS,IANX,mBAMvB6F,EANuB,KAMbC,EANa,KAQxBC,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OATxB,4CAY9B,oCAAA9E,EAAA,6DACQkF,EAAUrC,KAAKsC,MAErBT,GAAa,GAHf,SAKyBzE,MAAM,GAAD,OACvBlB,yBADuB,oBAE1B,CACEmB,OAAQ,MACRkF,MAAO,WACPjF,QAAS,IAAIC,QAAQ,CACnBC,cAAegF,KAAKV,OAGxBnE,OAAM,SAACC,GACP,MAAO,CAAEC,IAAI,MAfjB,UAKQC,EALR,OAkBQ2E,EAAW,MAAQzC,KAAKsC,MAAQD,GAlBxC,KAmBEI,EAAW,GAnBb,uCAmByBT,EAAMS,GAnB/B,WAqBO3E,EAASD,GArBhB,wBAsBIgE,GAAa,GACb7E,EAAe,CACbgB,MAAO,mBACPC,KAAO,WACL,OAAQH,EAASI,QACf,KAAK,IACH,MAAO,sCACT,KAAK,IACH,MAAO,2BACT,QACE,MAAO,qBAPN,KAzBb,4CAuCoBJ,EAAS4E,OAvC7B,WAuCQC,EAvCR,QAwCQC,EAAUhC,EAAU+B,OAEV3C,KAAKsC,OAAuB,IAAdM,EAAQC,KA1CxC,wBA2CIhB,GAAa,GACb7E,EAAe,CACbgB,MAAO,mBACPC,KAAM,yCA9CZ,2BAmDER,aAAaqF,QAAQ,UAAWH,GAChChB,GAAiB,GApDnB,6CAZ8B,sBAmE9B,OACE,yBAAKtF,UAAU,SACZF,GACC,kBAACG,EAAA,EAAD,CACEC,QAAQ,UACRC,QAAS,kBAAMJ,GAAiB,IAChCK,aAAW,GAHb,iEAQF,0BACEsG,SAAU,SAACnF,GACTA,EAAEoF,iBAhFoB,mCAiFtBC,KAGF,kBAACC,EAAA,EAAD,CAAWC,UAAU,yBACnB,kBAACC,EAAA,EAAD,iBACA,kBAAClE,EAAA,EAAD,CACEmE,WAAS,EACTC,KAAK,WACLhE,MAAOwC,EACP1C,SAAU,SAACxB,GAAD,OAAOmE,EAAYnE,EAAEyB,OAAOC,WAG1C,kBAACiE,EAAA,EAAD,CACEC,OAAK,EACLF,KAAK,SACL/G,QAAQ,UACRkH,SAAU7B,GAAiC,IAApBE,EAAStC,QAE/BoC,EACC,oCACE,kBAAC8B,EAAA,EAAD,CAASC,UAAU,OAAOnD,KAAK,KAAKnE,UAAU,cAC9C,kBAACqH,EAAA,EAAD,CAASC,UAAU,OAAOnD,KAAK,KAAKnE,UAAU,cAC9C,kBAACqH,EAAA,EAAD,CAASC,UAAU,OAAOnD,KAAK,KAAKnE,UAAU,eAGhD,0BAAMA,UAAU,gBAAhB,Y,MCpHG,SAASuH,IACtB,OACE,yBAAKvH,UAAU,YACb,uDCEC,IAAMwH,EACX3H,sBAGF,SAAS4H,EAAT,GAA0D,IAA5BC,EAA2B,EAA3BA,SAAatF,EAAc,4BAC/C1B,EAAoBjB,IAApBiB,gBACR,OACE,kBAAC,IAAU0B,EACR1B,EAAkBgH,EAAW,kBAAC,IAAD,CAAUC,GAAG,OAKjD,SAASC,EAAT,GAA4D,IAA5BF,EAA2B,EAA3BA,SAAatF,EAAc,4BACjD1B,EAAoBjB,IAApBiB,gBACR,OACE,kBAAC,IAAU0B,EACP1B,EAA6B,kBAAC,IAAD,CAAUiH,GAAG,eAAxBD,GAKX,SAASG,IACtB,OACE,kBAAC,IAAD,KACE,kBAACD,EAAD,CAAsBE,OAAK,EAACC,KAAK,KAC/B,kBAAC,EAAD,OAEF,kBAACH,EAAD,CAAsBE,OAAK,EAACC,KAAK,UAC/B,kBAAC,EAAD,OAEF,kBAACN,EAAD,CAAoBK,OAAK,EAACC,KAAK,cAC7B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOC,UAAWT,K,kBCvCT,SAASU,EAAWC,GACjC,IAAMC,EAAUD,EAAMC,QAChBC,EAAS,kBAAMF,EAAME,OAAOD,IAClC,OAAOA,EACL,kBAACE,EAAA,EAAD,CAAOC,MAAM,EAAMF,OAAQA,GACzB,kBAACC,EAAA,EAAM5F,OAAP,KACE,kBAAC4F,EAAA,EAAME,MAAP,KAAcJ,EAAQxG,QAExB,kBAAC0G,EAAA,EAAMnF,KAAP,KAAaiF,EAAQvG,MACrB,kBAACyG,EAAA,EAAMG,OAAP,KACE,kBAACtB,EAAA,EAAD,CAAQhH,QAAQ,UAAUuI,QAASL,GAChCD,EAAQO,OAAS,WAItB,KCTS,SAASC,IAAO,IAAD,EACgB/I,oBAAS,GADzB,mBACrBc,EADqB,KACJ4E,EADI,OAES1F,wBAASiE,GAFlB,mBAErB+E,EAFqB,KAETjI,EAFS,KAGtBkI,EAAWC,cAHW,SAUbC,IAVa,2EAU5B,sBAAAjI,EAAA,sDACEM,aAAa4H,QACb1D,GAAiB,GAFnB,4CAV4B,sBAK5B/C,qBAAU,WACR,IAAMgE,EAAUhC,EAAUnD,aAAaC,QAAQ,YAC/CiE,EAAiBiB,GAAW5C,KAAKsC,MAAsB,IAAdM,EAAQC,OAChD,IAOH,IAAMyC,EAAoB,CACxBvI,kBACA4E,mBACA3E,kBAGF,OACE,yBAAKX,UAAU,iBACb,kBAACkJ,EAAA,EAAD,CAAQC,GAAG,SACT,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAI,UAAK7B,EAAL,MAChB,0BAAMxH,UAAU,8BAAhB,mBACA,0BAAMA,UAAU,gBAAhB,qBAEF,kBAACkJ,EAAA,EAAOpF,SAAR,CAAiB9D,UAAU,uBACzB,kBAACsJ,EAAA,EAAD,KACG5I,EACC,kBAAC4I,EAAA,EAAIC,KAAL,CACEF,KAAI,UAAK7B,EAAL,WACJiB,QAAS,SAAClH,GACRA,EAAEoF,iBACFoC,MAJJ,UASwB,WAAtBF,EAASW,SACX,kBAACF,EAAA,EAAIC,KAAL,CAAUF,KAAI,UAAK7B,EAAL,WAAd,cACE3D,KAIV,kBAACtE,EAAWkK,SAAZ,CAAqBxG,MAAOgG,GAC1B,kBAACpB,EAAD,MACA,kBAACI,EAAD,CACEE,QAASS,EACTR,OAAM,uCAAE,WAAOsB,GAAP,SAAA5I,EAAA,yDACNH,OAAekD,IACM,IAAjB6F,EAAM5H,OAFJ,gCAGEiH,IAHF,2CAAF,0DCpDhBY,QAAQC,IAAR,wBAA6B/J,oBAA7B,MACA8J,QAAQC,IAAR,+BAAoC/J,yBAApC,MACA8J,QAAQC,IAAR,oCAAyC/J,aAAzC,M,MAKa,CAACgK,IAAY,I,mBAHnBC,E,KAAQC,E,KASfC,IAASC,OACP,kBAACH,EAAWC,EACV,kBAAC,EAAD,OAEFG,SAASC,eAAe,W","file":"static/js/main.5a062b3d.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import React, { useState } from \"react\";\nimport \"./Welcome.css\";\nimport { Alert } from \"react-bootstrap\";\n\nexport default function Welcome() {\n  const [showDemoAlert, setShowDemoAlert] = useState(\n    process.env.REACT_APP_API_URL === `${process.env.PUBLIC_URL}/demo`\n  );\n\n  return (\n    <div className=\"Welcome\">\n      {showDemoAlert && (\n        <Alert\n          variant=\"primary\"\n          onClose={() => setShowDemoAlert(false)}\n          dismissible\n        >\n          You are using Demo Mode. Proceed to the login page and use any\n          password to continue.\n        </Alert>\n      )}\n      <h1>AWS IoT Baseline</h1>\n      <p>An implementation starter kit.</p>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Accordion,\n  Card,\n  FormControl,\n  InputGroup,\n  Table,\n} from \"react-bootstrap\";\nimport { useAppContext } from \"../libs/AppContext\";\nimport \"./ThingsCard.css\";\n\nexport default function ThingsCard() {\n  const isRendered = useRef(true);\n\n  const [things, setThings] = useState([]);\n  const { isAuthenticated, showBasicError } = useAppContext();\n\n  useEffect(() => {\n    isAuthenticated && loadThings();\n    return () => (isRendered.current = false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAuthenticated]);\n\n  async function loadThings(filter) {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/v1/things`, {\n      method: \"get\",\n      headers: new Headers({\n        Authorization: localStorage.getItem(\"session\"),\n      }),\n    }).catch((e) => {\n      return { ok: false };\n    });\n\n    if (!isRendered.current) return;\n\n    if (!response.ok) {\n      showBasicError({\n        title: \"Unable To Load Data!\",\n        body: (() => {\n          switch (response.status) {\n            case 401:\n            case 403:\n              return \"Your session has expired. Please login again.\";\n            case 500:\n              return \"Unexpected server error.\";\n            default:\n              return \"Unexpected error.\";\n          }\n        })(),\n        logout: response.status === 401 || response.status === 403,\n      });\n      return;\n    }\n\n    const result = await response.json();\n\n    if (result.things && filter) {\n      filter = filter.toLowerCase();\n      result.things = result.things.filter((thing) => {\n        const displayName = thing.attributes && thing.attributes.name;\n        return (\n          (displayName && displayName.toLowerCase().includes(filter)) ||\n          thing.name.toLowerCase().includes(filter)\n        );\n      });\n    }\n\n    setThings(result.things);\n  }\n\n  function renderThings() {\n    return things.map((thing) => {\n      return (\n        <div key={`thing/${thing.name}`} className=\"list-group-item\">\n          <Accordion.Toggle\n            as=\"div\"\n            className=\"thing-header\"\n            eventKey={thing.name}\n          >\n            <h5>{(thing.attributes && thing.attributes.name) || thing.name}</h5>\n            {thing.attributes && thing.attributes.createdAt ? (\n              <p>\n                Created: {new Date(thing.attributes.createdAt).toLocaleString()}\n              </p>\n            ) : undefined}\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={thing.name}>\n            <div className=\"thing-details\">\n              <Table striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>Attribute</th>\n                    <th>Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.keys(thing.attributes).map((key) => {\n                    return (\n                      <tr key={`attribute/${key}`}>\n                        <td>\n                          <input value={key} />\n                        </td>\n                        <td>{thing.attributes[key]}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </Accordion.Collapse>\n        </div>\n      );\n    });\n  }\n\n  return (\n    <Card className=\"ThingsCard\">\n      <Card.Header>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Search</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            placeholder=\"All Things\"\n            onChange={(e) => loadThings(e.target.value)}\n          />\n        </InputGroup>\n      </Card.Header>\n      <Card.Body>\n        {!things || things.length === 0 ? (\n          <h5 className=\"empty-label\">No Things Found</h5>\n        ) : (\n          <Accordion className=\"list-group list-group-flush\">\n            {renderThings()}\n          </Accordion>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport ThingsCard from \"./ThingsCard.js\";\nimport { Alert } from \"react-bootstrap\";\n\nexport default function Dashboard() {\n  const [showDemoAlert, setShowDemoAlert] = useState(\n    process.env.REACT_APP_API_URL === `${process.env.PUBLIC_URL}/demo`\n  );\n\n  return (\n    <div className=\"Dashboard\">\n      {showDemoAlert && (\n        <Alert\n          variant=\"primary\"\n          onClose={() => setShowDemoAlert(false)}\n          dismissible\n        >\n          You are using Demo Mode. The data displayed below is read from static\n          files and written into browser storage. Any changes you make will only\n          affect the browser storage. You can logout to reset the data.\n        </Alert>\n      )}\n      <ThingsCard />\n    </div>\n  );\n}\n","export function decodeJwt(token) {\n  try {\n    // https://stackoverflow.com/a/38552302\n    let base64 = token.split(\".\")[1];\n    base64 = base64.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    return JSON.parse(\n      decodeURIComponent(\n        atob(base64)\n          .split(\"\")\n          .map(function (c) {\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n          })\n          .join(\"\")\n      )\n    );\n  } catch {\n    return null;\n  }\n}\n","import React, { useState } from \"react\";\nimport {\n  Alert,\n  Button,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Spinner,\n} from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { useAppContext } from \"../libs/AppContext\";\nimport { decodeJwt } from \"../libs/Jwt\";\n\nexport default function Login() {\n  const [showDemoAlert, setShowDemoAlert] = useState(\n    process.env.REACT_APP_API_URL === `${process.env.PUBLIC_URL}/demo`\n  );\n  const { setAuthenticated, showBasicError } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  async function login() {\n    const startAt = Date.now();\n\n    setIsLoading(true);\n\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/v1/authenticate`,\n      {\n        method: \"get\",\n        cache: \"no-store\",\n        headers: new Headers({\n          Authorization: btoa(password),\n        }),\n      }\n    ).catch((e) => {\n      return { ok: false };\n    });\n\n    const waitDiff = 1500 - (Date.now() - startAt);\n    waitDiff > 0 && (await sleep(waitDiff));\n\n    if (!response.ok) {\n      setIsLoading(false);\n      showBasicError({\n        title: \"Unable To Login!\",\n        body: (() => {\n          switch (response.status) {\n            case 401:\n              return \"Invalid password. Please try again.\";\n            case 500:\n              return \"Unexpected server error.\";\n            default:\n              return \"Unexpected error.\";\n          }\n        })(),\n      });\n      return;\n    }\n\n    const jwt = await response.text();\n    const session = decodeJwt(jwt);\n\n    if (!session || Date.now() >= session.exp * 1000) {\n      setIsLoading(false);\n      showBasicError({\n        title: \"Unable To Login!\",\n        body: \"Invalid session. Please login again.\",\n      });\n      return;\n    }\n\n    localStorage.setItem(\"session\", jwt);\n    setAuthenticated(true);\n  }\n\n  return (\n    <div className=\"Login\">\n      {showDemoAlert && (\n        <Alert\n          variant=\"primary\"\n          onClose={() => setShowDemoAlert(false)}\n          dismissible\n        >\n          You are using Demo Mode. Any password below will be accepted.\n        </Alert>\n      )}\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          login();\n        }}\n      >\n        <FormGroup controlId=\"iot-baseline-password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </FormGroup>\n        <Button\n          block\n          type=\"submit\"\n          variant=\"primary\"\n          disabled={isLoading || password.length === 0}\n        >\n          {isLoading ? (\n            <>\n              <Spinner animation=\"grow\" size=\"sm\" className=\"spinner-1\" />\n              <Spinner animation=\"grow\" size=\"sm\" className=\"spinner-2\" />\n              <Spinner animation=\"grow\" size=\"sm\" className=\"spinner-3\" />\n            </>\n          ) : (\n            <span className=\"align-middle\">Login</span>\n          )}\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useAppContext } from \"./libs/AppContext\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./containers/Welcome\";\nimport Dashboard from \"./containers/Dashboard\";\nimport Login from \"./containers/Login\";\nimport NotFound from \"./containers/NotFound\";\n\nexport const basename =\n  process.env.PUBLIC_URL +\n  (process.env.REACT_APP_ROUTER_CLASS === \"HashRouter\" ? \"/#\" : \"\");\n\nfunction AuthenticatedRoute({ children, ...attributes }) {\n  const { isAuthenticated } = useAppContext();\n  return (\n    <Route {...attributes}>\n      {isAuthenticated ? children : <Redirect to=\"/\" />}\n    </Route>\n  );\n}\n\nfunction UnauthenticatedRoute({ children, ...attributes }) {\n  const { isAuthenticated } = useAppContext();\n  return (\n    <Route {...attributes}>\n      {!isAuthenticated ? children : <Redirect to=\"/dashboard\" />}\n    </Route>\n  );\n}\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <UnauthenticatedRoute exact path=\"/\">\n        <Welcome />\n      </UnauthenticatedRoute>\n      <UnauthenticatedRoute exact path=\"/login\">\n        <Login />\n      </UnauthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/dashboard\">\n        <Dashboard />\n      </AuthenticatedRoute>\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nexport default function BasicError(props) {\n  const details = props.details;\n  const onHide = () => props.onHide(details);\n  return details ? (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header>\n        <Modal.Title>{details.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{details.body}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={onHide}>\n          {details.close || \"Close\"}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  ) : null;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport Routes, { basename } from \"./Routes\";\nimport \"./App.css\";\nimport { AppContext } from \"./libs/AppContext\";\nimport { decodeJwt } from \"./libs/Jwt\";\nimport BasicError from \"./libs/BasicError\";\n\nexport default function App() {\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [basicError, showBasicError] = useState(undefined);\n  const location = useLocation();\n\n  useEffect(() => {\n    const session = decodeJwt(localStorage.getItem(\"session\"));\n    setAuthenticated(session && Date.now() < session.exp * 1000);\n  }, []);\n\n  async function handleLogout() {\n    localStorage.clear();\n    setAuthenticated(false);\n  }\n\n  const AppContextExports = {\n    isAuthenticated,\n    setAuthenticated,\n    showBasicError,\n  };\n\n  return (\n    <div className=\"App container\">\n      <Navbar bg=\"light\">\n        <Navbar.Brand href={`${basename}/`}>\n          <span className=\"navbar-icon material-icons\">developer_board</span>\n          <span className=\"navbar-label\">Baseline Manager</span>\n        </Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Nav>\n            {isAuthenticated ? (\n              <Nav.Link\n                href={`${basename}/logout`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  handleLogout();\n                }}\n              >\n                Logout\n              </Nav.Link>\n            ) : location.pathname !== \"/login\" ? (\n              <Nav.Link href={`${basename}/login`}>Login</Nav.Link>\n            ) : undefined}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <AppContext.Provider value={AppContextExports}>\n        <Routes />\n        <BasicError\n          details={basicError}\n          onHide={async (error) => {\n            showBasicError(undefined);\n            if (error.logout === true) {\n              await handleLogout();\n            }\n          }}\n        />\n      </AppContext.Provider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { basename } from \"./Routes\";\n\nconsole.log(`PUBLIC_URL = '${process.env.PUBLIC_URL}'`);\nconsole.log(`REACT_APP_API_URL = '${process.env.REACT_APP_API_URL}'`);\nconsole.log(`REACT_APP_ROUTER_CLASS = '${process.env.REACT_APP_ROUTER_CLASS}'`);\n\nconst [Router, RouterProps] = (() => {\n  switch (process.env.REACT_APP_ROUTER_CLASS) {\n    case \"HashRouter\":\n      return [HashRouter, {}];\n    default:\n      return [BrowserRouter, { basename: basename }];\n  }\n})();\n\nReactDOM.render(\n  <Router {...RouterProps}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}